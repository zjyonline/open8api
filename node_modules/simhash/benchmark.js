/*
var crc32 = require('buffer-crc32');

crc32('123');*/


// var thing = require('time-thing')();
var Simhash = require('./main').Simhash;

var simhash = new Simhash('crc32');

var keys = Object.keys(Simhash.prototype);

// keys.forEach(function(key) {
// 	if (typeof(simhash[key]) === 'function') {
// 		var tmp = simhash[key];
// 		simhash[key] = function() {
// 			thing.start(key);
// 			var res = tmp.apply(simhash, arguments);
// 			thing.stop(key);
// 			return res;
// 		}
// 	}
// });

var tokens = 'abcdefghijklmnopqrstuvwxyzåäöabcdefghijklmnopqrstuvwxyzåäöabcdefghijklmnopqrstuvwxyzåäöabcdefghijklmnopqrstuvwxyzåäö'.split('');
var start = Date.now();
var i = 30000;
while(--i >= 0) simhash.hash(tokens);
var diff = Date.now() - start;
// console.log(thing.toString());
console.log(diff);